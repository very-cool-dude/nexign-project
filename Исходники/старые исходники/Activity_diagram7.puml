@startuml
|CDR|
start
:Генерация звонков;
:Сохранение в БД CDR;
repeat
  :Проверка количества неотправленных звонков;
  if (≥ 10 записей?) then (да)
    :Формирование CDR-файла;
    :Отправка файла в очередь BRT;
    :Обновление is_sended = 1;
  endif
repeat while (остались записи?)

|BRT|
:Получение CDR-файла;
if (Есть абоненты "Ромашка"?) then (да)
  :Поиск msisdn по таблице клиентов с оператором "Ромашка";
  if (msisdn абонента находится справа в записи) then (да)
    :Изменение записи, чтобы msisdn абонента был слева, а тип звонка меняется на противоположный;
  endif
  :Сохранение в БД BRT;
  if (is_sended = 0) then (да)
  note left: Проверка поля is_sended данного абонента в таблице clients
    :Формирование запроса в HRS;
    :Отправка в очередь HRS;
    :is_sended = 1;
  endif
else
  :Пропуск записи;
endif

|HRS|
:Получение запроса;
:Определение тарифа и сущностей;
:Расчёт стоимости и длительности;
:Формирование ответа;
:Отправка результата в BRT;

|BRT|
:Обработка ответа;
:Обновление параметров и баланса;
:is_tarifficated = 1;
note left: Указываем, что данная запись в таблице calls БД BRT протарифицирована
:is_sended = 0;
note left: Указываем, что протарифицированный абонент свободен и звонки с его участием могут снова быть протарифицированы

stop
@enduml
